# #
#   @parent         github workflow
#   @desc           test build
#   @author         Aetherinox
#   @url            https://github.com/Aetherinox
# #

run-name: "🌑 NPM › Tests"
name: "☁️ NPM › Tests"

# #
#   triggers
# #

on:
    [pull_request, push]

# #
#   environment variables
# #

env:
    FOLDER_DIST:            'dist'
    BOT_NAME_1:             AdminServ
    BOT_NAME_2:             AdminServX
    BOT_NAME_3:             EuropaServ
    BOT_NAME_DEPENDABOT:    dependabot[bot]
    GITHUB_TOKEN:           ${{ secrets.SELF_TOKEN_CL }}
    OWNER:                  ${{ github.repository_owner }}

# #
#   jobs
# #

jobs:
    validate:
        name: >-
          📦 Initialize
        runs-on: ubuntu-latest
        permissions: write-all
        outputs:
            package_version: ${{ steps.task_initialize_package_version.outputs.PACKAGE_VERSION }}
        steps:

            # #
            #   [ CI ] Start
            # #

            - name: "✅ Start"
              id: task_dailyreset_start
              run: |
                  echo "Starting nightly reset"

            # #
            #   [ CI ] Checkout
            # #

            - name: "☑️ Checkout"
              id: task_dailyreset_checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # #
            #   [ CI ] Node Setup
            # #

            - name: "⚙️ Setup › Node"
              id: task_ci_node_setup
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'
                  registry-url: https://npm.pkg.github.com/
                  scope: '@aetherinox'

            # #
            #   [ CI ] Node - Install
            # #

            - name: "📦 NPM › Install"
              id: task_cloudflare_npm_install
              run: |
                  npm install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.SELF_TOKEN_CL }}

            # #
            #   [ CI ] Pretty
            # #

            - name: "📦 NPM › Prettier"
              run: npm run pretty:fix

            # #
            #   [ CI ] Lint
            # #

            - name: "📦 NPM › Lint"
              run: npm run lint

            # #
            #   Release > Execute npm generate so that a uuid and guid can be created
            # #

            - name: "🪪 Generate IDs"
              id: task_release_npm_env_generate
              run: |
                  npm run root:generate

            # #
            #   .ENV > Print (Debug)
            #   Show guid and uuid from env variable generated by npm
            # #

            - name: "🪪 .ENV › Read"
              id: task_dotenv_debug_print
              run: |
                  echo "GUID: ${{ steps.task_release_dotenv_get.outputs.GUID }}"
                  echo "UUID: ${{ steps.task_release_dotenv_get.outputs.UUID }}"

            # #
            #   .ENV > Get
            #   Get guid and uuid from env variable generated by npm
            # #

            - name: "🪪 .ENV › Get"
              id: task_release_dotenv_get
              uses: falti/dotenv-action@v1

            # #
            #   [ CI ] Test
            # #

            - name: "📦 NPM › Test"
              run: npm run test
              env:
                  GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

            # #
            #   [ CI ] Create Github Deployment
            # #

            - name: Create GitHub deployment
              uses: chrnorm/deployment-action@v2
              id: deployment
              with:
                  token: ${{ env.GITHUB_TOKEN }}
                  environment: test
                  initial-status: success

            # #
            #   [ CI ] Delete Github Deployment
            # #

            - name: Delete GitHub deployment
              uses: ./
              with:
                  token: ${{ env.GITHUB_TOKEN }}
                  environment: test
